version: 2.1

orbs:
  nx: nrwl/nx@1.6.2
  aws-s3: circleci/aws-s3@3.1.1 # use the AWS S3 orb in your configuration

jobs:          
  main:
    docker:
      - image: cimg/node:18.14.2
    steps:
      - checkout

      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages2-{{ checksum "pnpm-lock.yaml" }}
            
      - run:
          name: Install PNPM
          command: npm install --prefix=$HOME/.local -g pnpm@8

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      #- run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      - run: pnpm install --frozen-lockfile
      - nx/set-shas:
          main-branch-name: 'main'

      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages2-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - /home/circleci/.local/share/pnpm/store

      #- run: pnpm exec playwright install --with-deps
      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: pnpm exec nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: pnpm exec nx affected --base=$NX_BASE --head=$NX_HEAD -t lint test build 

      - persist_to_workspace:
          root: .
          paths:
            - dist/nx

  deploy-step:
    docker: # Use the Docker executor for the build job
      - image: cimg/base:current
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - aws-s3/sync:
          from: dist/nx
          to: 's3://circleci-nx-test/'

  testttt0:
    docker:
      - image: cimg/base:current
    steps:
      - run: echo "lorem ipsum" > build_asset.txt
      - persist_to_workspace:
          root: .
          paths:
            - .


  testttt:
    docker:
      - image: cimg/base:current
    steps:
      - run: pwd
      - attach_workspace:
          at: .
      - run: ls

workflows:
  version: 2

  ci:
    jobs:
      - testttt0
      - testttt:
          requires:
            - testttt0

      # - main
      # - deploy-step:
      #     requires:
      #       - main
      #     filters:
      #       branches:
      #         only: /main/
    
